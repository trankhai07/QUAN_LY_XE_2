version: '3.8'
services:
  database:
    container_name: database
    image: postgres:15.3-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:${DATABASE_PORT}"
    networks:
      - mynestwork

  backend:
    container_name: backend
    image: trankhai07/khainghichdocker
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - mynestwork
    depends_on:
      - database
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      DATABASE_HOST: 'database'
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_TYPE: ${DATABASE_TYPE}
      APP_PORT: ${APP_PORT}
      NODE_ENV: ${NODE_ENV}
      APP_NAME: ${APP_NAME}
      API_PREFIX: ${API_PREFIX}
      JWT_SECRET: ${JWT_SECRET}
      REFRESH_SECRET: ${REFRESH_SECRET}
      ACCESS_EXPIRESIN: ${ACCESS_EXPIRESIN}
      REFRESH_EXPIRESIN: ${REFRESH_EXPIRESIN}
      FILE_DRIVER: ${FILE_DRIVER}
      AWS_REGION: ${AWS_REGION}
      AWS_PUBLIC_BUCKET_KEY: ${AWS_PUBLIC_BUCKET_KEY}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
volumes:
  postgres-data:
networks:
  mynestwork:
    driver: bridge
